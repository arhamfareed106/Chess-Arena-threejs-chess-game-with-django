{"version":3,"file":"JoinGamePage-Cy7nuBlR.js","sources":["../../src/pages/JoinGamePage.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  TextField,\r\n  Button,\r\n  Box,\r\n  IconButton,\r\n  Alert,\r\n} from '@mui/material';\r\nimport {\r\n  ArrowBack as ArrowBackIcon,\r\n} from '@mui/icons-material';\r\nimport { toast } from 'react-hot-toast';\r\n\r\nimport { JoinGameRequest } from '@/types';\r\nimport gameService from '@/services/gameService';\r\n\r\nconst JoinGamePage: React.FC = () => {\r\n  const { gameId } = useParams<{ gameId?: string }>();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  \r\n  const [loading, setLoading] = useState(false);\r\n  const [formData, setFormData] = useState<JoinGameRequest>({\r\n    playerName: '',\r\n    color: '#4ecdc4',\r\n    password: location.state?.password || '',\r\n  });\r\n  const [errors, setErrors] = useState<Record<string, string>>({});\r\n\r\n  const handleInputChange = (field: keyof JoinGameRequest) => (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    setFormData(prev => ({ ...prev, [field]: event.target.value }));\r\n    \r\n    // Clear error when user starts typing\r\n    if (errors[field]) {\r\n      setErrors(prev => ({ ...prev, [field]: '' }));\r\n    }\r\n  };\r\n\r\n  const handleColorChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setFormData(prev => ({ ...prev, color: event.target.value }));\r\n  };\r\n\r\n  const validateForm = (): boolean => {\r\n    const newErrors: Record<string, string> = {};\r\n\r\n    if (!formData.playerName.trim()) {\r\n      newErrors.playerName = 'Player name is required';\r\n    } else if (formData.playerName.length < 2) {\r\n      newErrors.playerName = 'Name must be at least 2 characters';\r\n    } else if (formData.playerName.length > 50) {\r\n      newErrors.playerName = 'Name must be less than 50 characters';\r\n    }\r\n\r\n    // Validate color format\r\n    if (!formData.color || !formData.color.match(/^#[0-9A-F]{6}$/i)) {\r\n      newErrors.color = 'Please select a valid color';\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (event: React.FormEvent) => {\r\n    event.preventDefault();\r\n    \r\n    if (!gameId) {\r\n      toast.error('No game ID provided');\r\n      return;\r\n    }\r\n\r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      const result = await gameService.joinGame(gameId, formData);\r\n      \r\n      // Store player credentials\r\n      localStorage.setItem('playerId', result.playerId);\r\n      localStorage.setItem('playerToken', result.playerToken);\r\n      \r\n      toast.success('Successfully joined game!');\r\n      \r\n      // Navigate to the game\r\n      navigate(`/play/${gameId}`);\r\n      \r\n    } catch (error: any) {\r\n      console.error('Failed to join game:', error);\r\n      \r\n      if (error.response?.status === 400) {\r\n        const errorData = error.response.data;\r\n        if (typeof errorData === 'object' && errorData.error) {\r\n          toast.error(errorData.error);\r\n        } else if (typeof errorData === 'object') {\r\n          setErrors(errorData);\r\n        } else {\r\n          toast.error('Failed to join game. Please check your input.');\r\n        }\r\n      } else if (error.response?.status === 404) {\r\n        toast.error('Game not found');\r\n        navigate('/');\r\n      } else {\r\n        toast.error('Failed to join game. Please try again.');\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    navigate('/');\r\n  };\r\n\r\n  const generateRandomColor = () => {\r\n    const colors = [\r\n      '#ff6b6b', '#4ecdc4', '#45b7d1', '#96ceb4', '#feca57',\r\n      '#ff9ff3', '#54a0ff', '#5f27cd', '#00d2d3', '#ff9f43',\r\n      '#10ac84', '#ee5a24', '#0abde3', '#3742fa', '#2f3542'\r\n    ];\r\n    \r\n    const randomColor = colors[Math.floor(Math.random() * colors.length)];\r\n    setFormData(prev => ({ ...prev, color: randomColor }));\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\" sx={{ py: 4 }}>\r\n      <Box className=\"mb-6\">\r\n        <Box className=\"flex items-center gap-2 mb-4\">\r\n          <IconButton \r\n            onClick={handleBack}\r\n            sx={{ color: 'white' }}\r\n          >\r\n            <ArrowBackIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h4\" className=\"text-white font-bold\">\r\n            Join Game\r\n          </Typography>\r\n        </Box>\r\n        \r\n        <Typography variant=\"body1\" className=\"text-white/80\">\r\n          Enter your details to join the TI Chess battle.\r\n        </Typography>\r\n      </Box>\r\n\r\n      <Card sx={{ background: 'rgba(255,255,255,0.95)', backdropFilter: 'blur(10px)' }}>\r\n        <CardContent sx={{ p: 4 }}>\r\n          {!gameId && (\r\n            <Alert severity=\"error\" className=\"mb-4\">\r\n              No game ID provided. Please select a game from the lobby.\r\n            </Alert>\r\n          )}\r\n          \r\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n            {/* Player Name */}\r\n            <TextField\r\n              fullWidth\r\n              label=\"Your Name\"\r\n              value={formData.playerName}\r\n              onChange={handleInputChange('playerName')}\r\n              error={!!errors.playerName}\r\n              helperText={errors.playerName}\r\n              placeholder=\"Enter your display name\"\r\n              required\r\n            />\r\n\r\n            {/* Color Selection */}\r\n            <Box>\r\n              <Typography variant=\"body2\" className=\"mb-2 font-medium\">\r\n                Choose Your Color:\r\n              </Typography>\r\n              <Box className=\"flex items-center gap-3\">\r\n                <input\r\n                  type=\"color\"\r\n                  value={formData.color}\r\n                  onChange={handleColorChange}\r\n                  className=\"w-16 h-12 rounded border-2 border-gray-300 cursor-pointer\"\r\n                />\r\n                <Box className=\"flex-1\">\r\n                  <TextField\r\n                    fullWidth\r\n                    size=\"small\"\r\n                    value={formData.color}\r\n                    onChange={handleColorChange}\r\n                    placeholder=\"#4ecdc4\"\r\n                    error={!!errors.color}\r\n                    helperText={errors.color}\r\n                  />\r\n                </Box>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  onClick={generateRandomColor}\r\n                >\r\n                  Random\r\n                </Button>\r\n              </Box>\r\n            </Box>\r\n\r\n            {/* Password (if needed) */}\r\n            {formData.password !== undefined && (\r\n              <TextField\r\n                fullWidth\r\n                type=\"password\"\r\n                label=\"Game Password\"\r\n                value={formData.password}\r\n                onChange={handleInputChange('password')}\r\n                error={!!errors.password}\r\n                helperText={errors.password}\r\n                placeholder=\"Enter the game password\"\r\n              />\r\n            )}\r\n\r\n            {/* Color Preview */}\r\n            <Box className=\"bg-gray-50 p-4 rounded-lg\">\r\n              <Typography variant=\"body2\" className=\"font-medium mb-2\">\r\n                Preview:\r\n              </Typography>\r\n              <Box className=\"flex items-center gap-2\">\r\n                <div\r\n                  className=\"w-8 h-8 rounded-full border-2 border-gray-300\"\r\n                  style={{ backgroundColor: formData.color }}\r\n                />\r\n                <Typography variant=\"body2\">\r\n                  {formData.playerName || 'Your Name'} - {formData.color}\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n\r\n            {/* Form Actions */}\r\n            <Box className=\"flex gap-3 pt-4\">\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"outlined\"\r\n                onClick={handleBack}\r\n                sx={{ flex: 1 }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              \r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                disabled={loading || !gameId}\r\n                sx={{ flex: 2 }}\r\n              >\r\n                {loading ? 'Joining Game...' : 'Join Game'}\r\n              </Button>\r\n            </Box>\r\n          </form>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Tips Card */}\r\n      <Card \r\n        sx={{ \r\n          mt: 3, \r\n          background: 'rgba(255,255,255,0.1)', \r\n          backdropFilter: 'blur(10px)',\r\n          border: '1px solid rgba(255,255,255,0.2)'\r\n        }}\r\n      >\r\n        <CardContent>\r\n          <Typography variant=\"h6\" className=\"text-white font-semibold mb-2\">\r\n            ðŸŽ® Game Tips\r\n          </Typography>\r\n          <ul className=\"text-white/90 text-sm space-y-1\">\r\n            <li>â€¢ Choose a unique color that represents your strategy</li>\r\n            <li>â€¢ Make sure your name is memorable for your opponent</li>\r\n            <li>â€¢ The game will start once both players are ready</li>\r\n            <li>â€¢ You can reconnect if your connection drops</li>\r\n          </ul>\r\n        </CardContent>\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default JoinGamePage;"],"names":["JoinGamePage","gameId","useParams","navigate","useNavigate","location","useLocation","loading","setLoading","useState","formData","setFormData","_a","errors","setErrors","handleInputChange","field","event","prev","handleColorChange","validateForm","newErrors","handleSubmit","toast","result","gameService","error","errorData","_b","handleBack","generateRandomColor","colors","randomColor","jsxs","Container","Box","jsx","IconButton","ArrowBackIcon","Typography","Card","CardContent","Alert","TextField","Button"],"mappings":"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"}