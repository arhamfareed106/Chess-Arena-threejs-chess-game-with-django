{"version":3,"file":"CreateGamePage-A2g9ICzs.js","sources":["../../src/pages/CreateGamePage.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  TextField,\r\n  Button,\r\n  FormControlLabel,\r\n  Switch,\r\n  Box,\r\n  IconButton,\r\n  InputAdornment,\r\n} from '@mui/material';\r\nimport {\r\n  ArrowBack as ArrowBackIcon,\r\n  Visibility,\r\n  VisibilityOff,\r\n} from '@mui/icons-material';\r\nimport { toast } from 'react-hot-toast';\r\n\r\nimport { CreateGameRequest } from '@/types';\r\nimport gameService from '@/services/gameService';\r\n\r\nconst CreateGamePage: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  \r\n  const [formData, setFormData] = useState<CreateGameRequest>({\r\n    name: '',\r\n    isPublic: true,\r\n    password: '',\r\n    hostName: '',\r\n  });\r\n\r\n  const [errors, setErrors] = useState<Record<string, string>>({});\r\n\r\n  const handleInputChange = (field: keyof CreateGameRequest) => (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    const value = event.target.type === 'checkbox' ? event.target.checked : event.target.value;\r\n    setFormData(prev => ({ ...prev, [field]: value }));\r\n    \r\n    // Clear error when user starts typing\r\n    if (errors[field]) {\r\n      setErrors(prev => ({ ...prev, [field]: '' }));\r\n    }\r\n  };\r\n\r\n  const validateForm = (): boolean => {\r\n    const newErrors: Record<string, string> = {};\r\n\r\n    if (!formData.hostName.trim()) {\r\n      newErrors.hostName = 'Your name is required';\r\n    } else if (formData.hostName.length < 2) {\r\n      newErrors.hostName = 'Name must be at least 2 characters';\r\n    } else if (formData.hostName.length > 50) {\r\n      newErrors.hostName = 'Name must be less than 50 characters';\r\n    }\r\n\r\n    if (!formData.name.trim()) {\r\n      newErrors.name = 'Game name is required';\r\n    } else if (formData.name.length < 3) {\r\n      newErrors.name = 'Game name must be at least 3 characters';\r\n    } else if (formData.name.length > 100) {\r\n      newErrors.name = 'Game name must be less than 100 characters';\r\n    }\r\n\r\n    if (!formData.isPublic && !formData.password?.trim()) {\r\n      newErrors.password = 'Password is required for private games';\r\n    } else if (!formData.isPublic && formData.password && formData.password.length < 4) {\r\n      newErrors.password = 'Password must be at least 4 characters';\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (event: React.FormEvent) => {\r\n    event.preventDefault();\r\n    \r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      const gameData = {\r\n        ...formData,\r\n        // Remove password if public game\r\n        password: formData.isPublic ? undefined : formData.password,\r\n      };\r\n\r\n      const game = await gameService.createGame(gameData);\r\n      \r\n      toast.success('Game created successfully!');\r\n      \r\n      // Navigate to the game page\r\n      navigate(`/play/${game.id}`);\r\n      \r\n    } catch (error: any) {\r\n      console.error('Failed to create game:', error);\r\n      \r\n      if (error.response?.status === 400) {\r\n        const errorData = error.response.data;\r\n        if (typeof errorData === 'object') {\r\n          // Handle field-specific errors\r\n          setErrors(errorData);\r\n        } else {\r\n          toast.error('Please check your input and try again.');\r\n        }\r\n      } else {\r\n        toast.error('Failed to create game. Please try again.');\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    navigate('/');\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\" sx={{ py: 4 }}>\r\n      <Box className=\"mb-6\">\r\n        <Box className=\"flex items-center gap-2 mb-4\">\r\n          <IconButton \r\n            onClick={handleBack}\r\n            sx={{ color: 'white' }}\r\n          >\r\n            <ArrowBackIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h4\" className=\"text-white font-bold\">\r\n            Create New Game\r\n          </Typography>\r\n        </Box>\r\n        \r\n        <Typography variant=\"body1\" className=\"text-white/80\">\r\n          Set up your TI Chess game and invite another player to join the strategic battle.\r\n        </Typography>\r\n      </Box>\r\n\r\n      <Card sx={{ background: 'rgba(255,255,255,0.95)', backdropFilter: 'blur(10px)' }}>\r\n        <CardContent sx={{ p: 4 }}>\r\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n            {/* Host Name */}\r\n            <TextField\r\n              fullWidth\r\n              label=\"Your Name\"\r\n              value={formData.hostName}\r\n              onChange={handleInputChange('hostName')}\r\n              error={!!errors.hostName}\r\n              helperText={errors.hostName}\r\n              placeholder=\"Enter your display name\"\r\n              required\r\n            />\r\n\r\n            {/* Game Name */}\r\n            <TextField\r\n              fullWidth\r\n              label=\"Game Name\"\r\n              value={formData.name}\r\n              onChange={handleInputChange('name')}\r\n              error={!!errors.name}\r\n              helperText={errors.name}\r\n              placeholder=\"Enter a name for your game\"\r\n              required\r\n            />\r\n\r\n            {/* Public/Private Toggle */}\r\n            <Box>\r\n              <FormControlLabel\r\n                control={\r\n                  <Switch\r\n                    checked={formData.isPublic}\r\n                    onChange={handleInputChange('isPublic')}\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label={\r\n                  <Box>\r\n                    <Typography variant=\"body1\">\r\n                      {formData.isPublic ? 'Public Game' : 'Private Game'}\r\n                    </Typography>\r\n                    <Typography variant=\"caption\" className=\"text-gray-600\">\r\n                      {formData.isPublic \r\n                        ? 'Anyone can see and join this game'\r\n                        : 'Only players with the password can join'\r\n                      }\r\n                    </Typography>\r\n                  </Box>\r\n                }\r\n              />\r\n            </Box>\r\n\r\n            {/* Password (for private games) */}\r\n            {!formData.isPublic && (\r\n              <TextField\r\n                fullWidth\r\n                type={showPassword ? 'text' : 'password'}\r\n                label=\"Game Password\"\r\n                value={formData.password}\r\n                onChange={handleInputChange('password')}\r\n                error={!!errors.password}\r\n                helperText={errors.password || 'Players will need this password to join'}\r\n                placeholder=\"Enter a password for your game\"\r\n                required\r\n                InputProps={{\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        onClick={() => setShowPassword(!showPassword)}\r\n                        edge=\"end\"\r\n                      >\r\n                        {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n              />\r\n            )}\r\n\r\n            {/* Game Rules Summary */}\r\n            <Box className=\"bg-blue-50 p-4 rounded-lg\">\r\n              <Typography variant=\"body2\" className=\"font-medium mb-2\">\r\n                Game Rules Summary:\r\n              </Typography>\r\n              <ul className=\"text-sm text-gray-700 space-y-1\">\r\n                <li>â€¢ 2 players take turns moving pieces on an 8Ã—8 board</li>\r\n                <li>â€¢ Pieces evolve from Talent â†’ Leader â†’ Strategist â†’ Investor</li>\r\n                <li>â€¢ Win by eliminating all opponent Investor pieces</li>\r\n                <li>â€¢ Each piece type has unique movement and special abilities</li>\r\n              </ul>\r\n            </Box>\r\n\r\n            {/* Form Actions */}\r\n            <Box className=\"flex gap-3 pt-4\">\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"outlined\"\r\n                onClick={handleBack}\r\n                sx={{ flex: 1 }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              \r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                disabled={loading}\r\n                sx={{ flex: 2 }}\r\n              >\r\n                {loading ? 'Creating Game...' : 'Create Game'}\r\n              </Button>\r\n            </Box>\r\n          </form>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Tips Card */}\r\n      <Card \r\n        sx={{ \r\n          mt: 3, \r\n          background: 'rgba(255,255,255,0.1)', \r\n          backdropFilter: 'blur(10px)',\r\n          border: '1px solid rgba(255,255,255,0.2)'\r\n        }}\r\n      >\r\n        <CardContent>\r\n          <Typography variant=\"h6\" className=\"text-white font-semibold mb-2\">\r\n            ðŸ’¡ Pro Tips\r\n          </Typography>\r\n          <ul className=\"text-white/90 text-sm space-y-1\">\r\n            <li>â€¢ Choose a descriptive game name to attract players</li>\r\n            <li>â€¢ Private games are great for playing with friends</li>\r\n            <li>â€¢ Share the game link and password with your opponent</li>\r\n            <li>â€¢ Games auto-delete after 24 hours of inactivity</li>\r\n          </ul>\r\n        </CardContent>\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CreateGamePage;"],"names":["CreateGamePage","navigate","useNavigate","loading","setLoading","useState","showPassword","setShowPassword","formData","setFormData","errors","setErrors","handleInputChange","field","event","value","prev","validateForm","newErrors","_a","handleSubmit","gameData","game","gameService","toast","error","errorData","handleBack","jsxs","Container","Box","jsx","IconButton","ArrowBackIcon","Typography","Card","CardContent","TextField","FormControlLabel","Switch","InputAdornment","VisibilityOff","Visibility","Button"],"mappings":"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"}